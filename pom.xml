<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>de.hfriedri.demo</groupId>
	<artifactId>hfriedri-demo</artifactId>
	<name>hfriedri-demo</name>
	<version>0.0.1-SNAPSHOT</version>
	<description>Demo Applikation als Spielwiese fuer allerlei</description>

	<parent>
		<artifactId>spring-boot-starter-parent</artifactId>
		<groupId>org.springframework.boot</groupId>
		<version>2.5.4</version>
	</parent>

	<organization>
		<name>Mustermann AG</name>
		<url>https://www.mustermann.de</url>
	</organization>

	<licenses>
		<license>
			<name>Hfriedri - All rights reserved</name>
		</license>
	</licenses>

	<contributors>
		<contributor>
			<email>max.mustermann@company.de</email>
			<name>Mustermann, Max</name>
			<organization>Mustermann AG</organization>
			<organizationUrl>https://www.mustermann.de</organizationUrl>
			<roles>
				<role>Head of Development</role>
			</roles>
		</contributor>

		<contributor>
			<roles>
				<role>Scrum Master</role>
			</roles>
			<organization>Mustermann AG</organization>
			<organizationUrl>https://www.mustermann.de</organizationUrl>
			<name>Musterfrau, Martina</name>
			<email>martina.musterfrau@mustermann.de</email>
		</contributor>
	</contributors>

	<developers>
		<developer>
			<id>-</id>
			<roles>
				<role>Software Engineer</role>
			</roles>
			<organization>Mustermann GmbH</organization>
			<organizationUrl>https://www.mustermann.de/</organizationUrl>
			<name>Musterjunge, Maximilian</name>
			<email>maximilian.musterjunge@mustermann.de</email>
		</developer>
	</developers>

	<ciManagement>
		<system>Jenkins</system>
		<url>http://localhost:8080/TODO</url>
	</ciManagement>

	<scm>
		<connection>github</connection>
		<url>github repo</url>
	</scm>

	<properties>
		<!-- Each Block is Line Sorted -->
		<!-- Allgemein -->

		<java.version>11</java.version>
		<maven.version>3.6.3</maven.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.javascript.file.suffixes>.js,.jsx,.vue</sonar.javascript.file.suffixes>
		<sonar.junit.reportPaths>${project.build.directory}/surefire-reports/</sonar.junit.reportPaths>

		<openapi-generator.basePackage>de.hfriedri.demo.openapi</openapi-generator.basePackage>
		<openapi-generator.apiPackage>${openapi-generator.basePackage}.api</openapi-generator.apiPackage>
		<openapi-generator.modelPackage>${openapi-generator.basePackage}.model</openapi-generator.modelPackage>
		<openapi-generator.authPackage>${openapi-generator.basePackage}.auth</openapi-generator.authPackage>
		<javadoc.excludePackageNames>${openapi-generator.basePackage},${openapi-generator.apiPackage},${openapi-generator.modelPackage},${openapi-generator.authPackage}</javadoc.excludePackageNames>

		<!-- Plugin Versions -->
		<lint-maven-plugin.version>0.0.11</lint-maven-plugin.version>
		<apache-rat-plugin.version>0.13</apache-rat-plugin.version>
		<apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
		<build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>
		<copy-rename-maven-plugin.version>1.0.1</copy-rename-maven-plugin.version>
		<gitflow-maven-plugin.version>1.16.0</gitflow-maven-plugin.version>
		<graphqlcodegen-maven-plugin.version>1.10</graphqlcodegen-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
		<license-maven-plugin.version>2.0.0</license-maven-plugin.version>
		<maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
		<maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
		<maven-failsafe-plugin>2.22.2</maven-failsafe-plugin>
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
		<maven-jxr-plugin.version>3.1.1</maven-jxr-plugin.version>
		<maven-pmd-plugin.version>3.14.0</maven-pmd-plugin.version>
		<maven-project-info-reports-plugin.version>3.1.2</maven-project-info-reports-plugin.version>
		<maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>
		<maven-site-plugin.version>3.9.1</maven-site-plugin.version>
		<wagon-webdav.version>1.0-beta-2</wagon-webdav.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<plan-maven-plugin.version>1.2</plan-maven-plugin.version>
		<plantuml-maven-plugin.version>1.5.2</plantuml-maven-plugin.version>
		<sonar-maven-plugin.version>3.9.0.2155</sonar-maven-plugin.version>
		<spotbugs-maven-plugin.version>4.1.4</spotbugs-maven-plugin.version>
		<spotless-maven-plugin.version>2.12.1</spotless-maven-plugin.version>
		<taglist-maven-plugin.version>2.4</taglist-maven-plugin.version>
		<dependency-check-maven.version>6.2.2</dependency-check-maven.version>
		<openapi-generator-maven-plugin.version>5.1.1</openapi-generator-maven-plugin.version>

		<!-- Plugin Dependency Versions -->
		<asciidoctor.maven.plugin.version>2.1.0</asciidoctor.maven.plugin.version>
		<asciidoctorj.version>2.4.1</asciidoctorj.version>
		<doxia-module-xhtml.version>1.9.1</doxia-module-xhtml.version>
		<jruby.version>9.2.13.0</jruby.version>
		<plantuml.version>1.2021.2</plantuml.version>
		<spotbugs.version>4.1.4</spotbugs.version>

		<!-- Dependency Versions -->
		<awaitility.version>4.1.0</awaitility.version>
		<aws-java-sdk-s3.version>1.11.1000</aws-java-sdk-s3.version>
		<catch-exception.version>2.0</catch-exception.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<commons-codec.version>1.15</commons-codec.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<commons-digester.version>1.8</commons-digester.version>
		<commons-io.version>2.8.0</commons-io.version>
		<commons-lang.version>2.6</commons-lang.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<commons-logging.version>1.1.3</commons-logging.version>
		<easy-random-core.version>4.0.0</easy-random-core.version>
		<ecj.version>4.6.1</ecj.version>
		<error_prone_annotations.version>2.5.1</error_prone_annotations.version>
		<graphql-dgs-spring-boot-starter.version>3.8.0</graphql-dgs-spring-boot-starter.version>
		<graphql-java.version>16.2</graphql-java.version>
		<guava.version>30.1.1-jre</guava.version>
		<hamcrest-optional.version>2.0.0</hamcrest-optional.version>
		<hibernate-validator.version>6.2.0.Final</hibernate-validator.version>
		<itextpdf.version>5.5.13.2</itextpdf.version>
		<jackson-annotations.version>2.12.4</jackson-annotations.version>
		<jackson-core.version>2.12.4</jackson-core.version>
		<jackson-databind-nullable-version>0.2.1</jackson-databind-nullable-version>
		<jackson-databind-version>2.11.4</jackson-databind-version>
		<jackson-databind.version>2.12.4</jackson-databind.version>
		<jackson-version>2.11.4</jackson-version>
		<jakarta.activation.version>2.0.0</jakarta.activation.version>
		<jakarta.xml.bind-api.version>3.0.0</jakarta.xml.bind-api.version>
		<javafaker.version>1.0.2</javafaker.version>
		<javassist.version>3.27.0-GA</javassist.version>
		<javax-annotation-version>1.3.2</javax-annotation-version>
		<javax.el-api.version>3.0.0</javax.el-api.version>
		<jersey-version>2.30.1</jersey-version>
		<jna.version>5.5.0</jna.version>
		<jodatime-version>2.10.8</jodatime-version>
		<json-path.version>2.5.0</json-path.version>
		<jsr305.version>3.0.2</jsr305.version>
		<jsr305.version>3.0.2</jsr305.version>
		<junit-jupiter-api.version>5.7.2</junit-jupiter-api.version>
		<junit-platform-commons.version>1.7.2</junit-platform-commons.version>
		<junit-platform-runner.version>1.0.1</junit-platform-runner.version>
		<junit-version>4.13.1</junit-version>
		<kotlin-reflect.version>1.4.31</kotlin-reflect.version>
		<kotlin-stdlib-common.version>1.4.31</kotlin-stdlib-common.version>
		<kotlin-stdlib-jdk7.version>1.4.31</kotlin-stdlib-jdk7.version>
		<kotlin-stdlib-jdk8.version>1.4.31</kotlin-stdlib-jdk8.version>
		<kotlin-stdlib.version>1.4.31</kotlin-stdlib.version>
		<kubernetes-maven-plugin.version>1.3.0</kubernetes-maven-plugin.version>
		<mapstruct.version>1.3.1.Final</mapstruct.version>
		<migbase64.version>2.2</migbase64.version>
		<mockito-inline.version>3.6.28</mockito-inline.version>
		<mongo-java-driver.version>3.12.10</mongo-java-driver.version>
		<mvel2.version>2.4.10.Final</mvel2.version>
		<netty.version>4.1.63.Final</netty.version>
		<objenesis.version>3.2</objenesis.version>
		<org.lombok-mapstruct-binding.version>0.1.0</org.lombok-mapstruct-binding.version>
		<org.lombok.version>1.18.18</org.lombok.version>
		<protobuf-java.version>3.14.0</protobuf-java.version>
		<querydsl.version>4.4.0</querydsl.version>
		<reactor-core.version>3.4.6</reactor-core.version>
		<reflections.version>0.9.12</reflections.version>
		<remap.version>4.2.5</remap.version>
		<slf4j-api.version>1.7.32</slf4j-api.version>
		<snakeyaml.version>1.28</snakeyaml.version>
		<spring-boot-configuration-processor.version>2.5.5</spring-boot-configuration-processor.version>
		<spring-boot.version>${project.parent.version}</spring-boot.version>
		<spring-framework.version>5.3.9</spring-framework.version>
		<swagger-annotations-version>1.6.2</swagger-annotations-version>
		<swagger-parser-v3.version>2.0.24</swagger-parser-v3.version>
		<testcontainers-junit-jupiter.version>1.15.1</testcontainers-junit-jupiter.version>
		<testcontainers-localstack.version>1.15.1</testcontainers-localstack.version>
		<testcontainers-mongodb.version>1.15.1</testcontainers-mongodb.version>
		<throwing-function.version>1.5.1</throwing-function.version>
		<velocity.version>1.7</velocity.version>
		<wiremock.version>2.27.2</wiremock.version>
		<zjsonpatch.version>0.4.11</zjsonpatch.version>
		<springfox-swagger2.version>3.0.0</springfox-swagger2.version>
		<classgraph.version>4.8.83</classgraph.version>
	</properties>

	<distributionManagement>
		<repository>
			<id>deployment</id>
			<name>Internal Releases</name>
			<url>http://localhost:8081/repository/HFRIEDRI-RELEASES/</url>
		</repository>
		<snapshotRepository>
			<id>deployment</id>
			<name>Internal Snapshot Release</name>
			<url>http://localhost:8081/repository/HFRIEDRI-SNAPSHOTS/</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.lewisd</groupId>
					<artifactId>lint-maven-plugin</artifactId>
					<version>${lint-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${maven-jxr-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.owasp</groupId>
					<artifactId>dependency-check-maven</artifactId>
					<version>${dependency-check-maven.version}</version>
				</plugin>
				<plugin>
					<groupId>tk.skuro</groupId>
					<artifactId>plan-maven-plugin</artifactId>
					<version>${plan-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.amashchenko.maven.plugin</groupId>
					<artifactId>gitflow-maven-plugin</artifactId>
					<version>${gitflow-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.mysema.maven</groupId>
					<artifactId>apt-maven-plugin</artifactId>
					<version>${apt-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.diffplug.spotless</groupId>
					<artifactId>spotless-maven-plugin</artifactId>
					<version>${spotless-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.funthomas424242</groupId>
					<artifactId>plantuml-maven-plugin</artifactId>
					<version>${plantuml-maven-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>net.sourceforge.plantuml</groupId>
							<artifactId>plantuml</artifactId>
							<version>${plantuml.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>${spotbugs-maven-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.github.spotbugs</groupId>
							<artifactId>spotbugs</artifactId>
							<version>${spotbugs.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.coderplus.maven.plugins</groupId>
					<artifactId>copy-rename-maven-plugin</artifactId>
					<version>${copy-rename-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven-pmd-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>io.github.deweyjose</groupId>
					<artifactId>graphqlcodegen-maven-plugin</artifactId>
					<version>${graphqlcodegen-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven-project-info-reports-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jsr305</artifactId>
					<version>${jsr305.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>gitflow-maven-plugin</artifactId>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<configuration>

					<commitMessages>
						<featureFinishMessage>updating versions for development branch</featureFinishMessage>
						<featureStartMessage>updating versions for feature branch</featureStartMessage>

						<hotfixFinishMessage>updating for next development version</hotfixFinishMessage>
						<hotfixStartMessage>updating versions for hotfix</hotfixStartMessage>

						<releaseFinishMessage>updating for next development version</releaseFinishMessage>
						<releaseStartMessage>updating versions for release</releaseStartMessage>

						<tagHotfixMessage>tagging hotfix</tagHotfixMessage>
						<tagReleaseMessage>tagging release</tagReleaseMessage>
					</commitMessages>
					<gitFlowConfig>
						<developmentBranch>develop</developmentBranch>
						<featureBranchPrefix>feature/</featureBranchPrefix>
						<hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
						<origin>origin</origin>
						<productionBranch>master</productionBranch>
						<releaseBranchPrefix>release/</releaseBranchPrefix>
					</gitFlowConfig>
					<installProject>false</installProject>
					<keepBranch>false</keepBranch>
					<pushRemote>true</pushRemote>
					<verbose>false</verbose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.lewisd</groupId>
				<artifactId>lint-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>pom-lint</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<failOnViolation>true</failOnViolation>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>tk.skuro</groupId>
				<artifactId>plan-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>showplan</id>
						<phase>validate</phase>
						<goals>
							<goal>plan</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-graphql-classes</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>reserve-network-port</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<portNames>
								<portName>wiremockServerPort</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>runEnforcer</id>
						<phase>validate</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>${maven.version}</version>
								</requireMavenVersion>
								<requireFilesDontExist>
									<message>license-maven-plugin:download-licenses has errors!</message>
									<files>
										<file>${project.build.directory}/generated-resources/licenses-errors.xml</file>
									</files>
								</requireFilesDontExist>
								<requireJavaVersion>
									<version>[${java.version},)</version>
								</requireJavaVersion>
								<dependencyConvergence>
									<uniqueVersions>true</uniqueVersions>
								</dependencyConvergence>
								<requireUpperBoundDeps>
									<uniqueVersions>true</uniqueVersions>
								</requireUpperBoundDeps>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>runUnitTests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<useSystemClassLoader>false</useSystemClassLoader>
							<properties>
								<configurationParameters>junit.jupiter.extensions.autodetection.enabled=true</configurationParameters>
							</properties>
							<excludes>
								<exclude>**/*IT*</exclude>
							</excludes>
							<includes>
								<include>**/*Test.java</include>
							</includes>
							<systemPropertyVariables>
								<wiremockServerPort>${wiremockServerPort}</wiremockServerPort>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>runIntegrationTests</id>
						<phase>verify</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*Test.java</exclude>
							</excludes>
							<includes>
								<include>**/*IT.java</include>
							</includes>
							<testFailureIgnore>false</testFailureIgnore>
							<properties>
								<configurationParameters>
									junit.jupiter.extensions.autodetection.enabled=true
								</configurationParameters>
							</properties>
							<systemPropertyVariables>
								<reportDisabledTests>true</reportDisabledTests>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>licenceHeaders</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<verbose>false</verbose>
							<addSvnKeyWords>true</addSvnKeyWords>
							<organizationName>Hfriedri</organizationName>
							<copyrightOwners>Hfriedri</copyrightOwners>
							<canUpdateLicense>true</canUpdateLicense>
							<canUpdateCopyright>true</canUpdateCopyright>
							<canUpdateDescription>true</canUpdateDescription>
							<inceptionYear>2021</inceptionYear>
							<licenseName>my_license</licenseName>
							<licenseResolver>${project.baseUri}/src/license</licenseResolver>
							<extraExtensions>
								<puml>properties</puml>
							</extraExtensions>
							<descriptionTemplate>${basedir}/src/license/myTemplate.ftl</descriptionTemplate>
							<roots>
								<root>src/main/config</root>
								<root>src/main/doc</root>
								<root>src/main/java</root>
								<root>src/main/resources</root>
								<root>src/test</root>
							</roots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generateTestQueryDslClasses</id>
						<phase>process-test-sources</phase>
						<goals>
							<goal>test-process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-test-sources</outputDirectory>
							<processor>org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor</processor>
							<options>
								<querydsl.excludedPackages>org.slf4j</querydsl.excludedPackages>
							</options>
						</configuration>
					</execution>
					<execution>
						<id>generateQueryDslClasses</id>
						<phase>process-sources</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources</outputDirectory>
							<processor>org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor
							</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${org.lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<!-- This is needed when using Lombok 1.8.16 and above -->
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${org.lombok-mapstruct-binding.version}</version>
						</path>
						<!-- other annotation processors -->
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Xlint:all</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>apply code format</id>
						<phase>process-sources</phase>
						<goals>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<java>
						<eclipse>
							<file>${basedir}/cleancode/spotless/Code-format.xml</file>
						</eclipse>
						<removeUnusedImports />
						<importOrder>
							<file>${basedir}/cleancode/spotless/spotless.importorder</file>
						</importOrder>
					</java>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.funthomas424242</groupId>
				<artifactId>plantuml-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generateSvgFromPumls</id>
						<phase>process-classes</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>svg</format>
					<charset>UTF-8</charset>
					<sourceFiles>
						<directory>${basedir}</directory>
						<includes>
							<include>src/main/doc/**/*.puml</include>
						</includes>
					</sourceFiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copyPumlsSvg4Site</id>
						<phase>process-classes</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy todir="${basedir}/target/site/pumlSvgs/">
									<fileset dir="${basedir}/target/plantuml/"
											 includes="**/*.svg" />
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>spotbugs</id>
						<phase>verify</phase>
						<goals>
							<goal>spotbugs</goal>
						</goals>
						<configuration>
							<excludeFilterFile>${project.basedir}/cleancode/spotbugs-exclude.xml
							</excludeFilterFile>
							<effort>Max</effort>
							<threshold>Low</threshold>
							<xmlOutput>true</xmlOutput>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>downloadDependency-Sources and -Javadocs</id>
						<phase>initialize</phase>
						<goals>
							<goal>sources</goal>
						</goals>
						<configuration>
							<includeClassifiers>sources,javadoc</includeClassifiers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<excludePackageNames>${javadoc.excludePackageNames}
					</excludePackageNames>
				</configuration>
				<executions>
					<execution>
						<id>generateJavaDoc</id>
						<phase>site</phase>
						<goals>
							<goal>javadoc-no-fork</goal>
						</goals>
						<configuration>
							<show>private</show>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>jacocoAgentPrepare</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacocoReport</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/Q*.class</exclude>
								<exclude>**/*MapperImpl.class</exclude>
								<exclude>**/openapi/**/*.class</exclude>
								<exclude>**/generated/**/*.class</exclude>
							</excludes>
							<rules>
								<rule>
									<element>CLASS</element>
									<excludes>
										<exclude>*Test</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<!-- ToDo: activate local quality gates (80%) -->
											<minimum>0%</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<executions>
					<execution>
						<id>runPmdAndCpd</id>
						<phase>site</phase>
						<goals>
							<goal>check</goal>
							<goal>cpd-check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rulesets>
						<ruleset>${project.basedir}/cleancode/rulesets/pmd-rules.xml
						</ruleset>
					</rulesets>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${maven.compiler.target}</targetJdk>
					<excludeRoots>
						<excludeRoot>target/generated-sources/</excludeRoot>
					</excludeRoots>
					<includeTests>true</includeTests>
					<analysisCache>true</analysisCache>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<artifactId>lombok</artifactId>
							<groupId>org.projectlombok</groupId>
						</exclude>
						<exclude>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
						</exclude>
					</excludes>
					<image>
						<name>hfriedri-demo:${project.version}</name>
					</image>
				</configuration>
				<groupId>org.springframework.boot</groupId>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<useNativeGit>true</useNativeGit>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.github.deweyjose</groupId>
				<artifactId>graphqlcodegen-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>schema-to-java</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<schemaPaths>
						<param>src/main/resources/schema/schema.graphqls</param>
					</schemaPaths>
					<generateClient>true</generateClient>
					<packageName>de.hfriedri.demo.generated
					</packageName>
					<subPackageNameDatafetchers>datafetchers
					</subPackageNameDatafetchers>
					<subPackageNameTypes>types</subPackageNameTypes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-generator-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<id>generate-openapi-client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>src/main/openapi/api.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<apiPackage>${openapi-generator.apiPackage}</apiPackage>
							<modelPackage>${openapi-generator.modelPackage}</modelPackage>
							<library>spring-boot</library>
							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<useTags>true</useTags>
								<interfaceOnly>true</interfaceOnly>
								<delegatePattern>false</delegatePattern>
							</configOptions>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<instantiationTypes>array=ArrayList,map=HashMap
							</instantiationTypes>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.swagger.parser.v3</groupId>
						<artifactId>swagger-parser-v3</artifactId>
						<version>${swagger-parser-v3.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/config</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>./</directory>
				<filtering>true</filtering>
				<includes>
					<include>Dockerfile</include>
				</includes>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/test/config</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>

	<profiles>
		<profile>
			<id>kubernetes_plugin</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>kubernetes-maven-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<images>
										<image>
											<alias>${project.name}</alias>
											<build>
												<dockerFile>${project.build.directory}/classes/Dockerfile
												</dockerFile>
												<optimise>true</optimise>
												<tags>
													<tag>latest</tag>
													<tag>${project.version}</tag>
												</tags>
											</build>
											<name>hfriedri_demo</name>
										</image>
									</images>
									<verbose>true</verbose>
								</configuration>
								<goals>
									<goal>build</goal>
								</goals>
								<id>buildDockerImage</id>
								<phase>install</phase>
							</execution>
						</executions>
						<groupId>org.eclipse.jkube</groupId>
						<version>${kubernetes-maven-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>license management</id>
								<phase>site</phase>
								<goals>
									<!-- <goal>download-licenses</goal> -->
									<goal>add-third-party</goal>
									<goal>third-party-report</goal>
								</goals>
								<configuration>
									<artifactFiltersUrl>
										file:///${basedir}/cleancode/license-maven-plugin.artifactFilters
									</artifactFiltersUrl>
									<errorRemedy>xmlOutput</errorRemedy>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<testResources>
					<testResource>
						<directory>src/test/resources/not_bamboo</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>
			</build>
		</profile>
		<profile>
			<id>dependency_checks</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>checkDependencyAndPluginVersions</id>
								<phase>site</phase>
								<goals>
									<goal>display-dependency-updates</goal>
									<goal>display-plugin-updates</goal>
								</goals>
								<configuration>
									<rulesUri>file://${basedir}/cleancode/versionsPluginRules.xml
									</rulesUri>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<configuration>
							<cveValidForHours>72</cveValidForHours>
							<autoUpdate>false</autoUpdate>
							<failOnError>false</failOnError>
						</configuration>
						<reportSets>
							<reportSet>
								<reports>
									<report>aggregate</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>reporting</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<reporting>
				<plugins>
					<plugin>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs-maven-plugin</artifactId>
						<configuration>
							<xmlOutput>true</xmlOutput>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<configuration>
							<rulesUri>file://${basedir}/cleancode/versionsPluginRules.xml
							</rulesUri>
						</configuration>
						<reportSets>
							<reportSet>
								<reports>
									<report>dependency-updates-report</report>
									<report>plugin-updates-report</report>
									<report>property-updates-report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
						<version>${maven-scm-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<show>private</show>
							<excludePackageNames>${javadoc.excludePackageNames}</excludePackageNames>
						</configuration>
						<reportSets>
							<reportSet>
								<reports>
									<report>javadoc-no-fork</report>
									<report>test-javadoc-no-fork</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<reportSets>
							<reportSet>
								<reports>
									<report>analyze-report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>taglist-maven-plugin</artifactId>
						<version>${taglist-maven-plugin.version}</version>
						<configuration>
							<tagListOptions>
								<tagClasses>
									<tagClass>
										<displayName>needed Fixes</displayName>
										<tags>
											<tag>
												<matchString>FIXME</matchString>
												<matchType>ignoreCase</matchType>
											</tag>
										</tags>
									</tagClass>
									<tagClass>
										<displayName>work to do</displayName>
										<tags>
											<tag>
												<matchString>todo</matchString>
												<matchType>ignoreCase</matchType>
											</tag>
										</tags>
									</tagClass>
								</tagClasses>
							</tagListOptions>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<reportSets>
							<reportSet>
								<reports>
									<report>third-party-report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					<plugin>
						<groupId>org.apache.rat</groupId>
						<artifactId>apache-rat-plugin</artifactId>
						<version>${apache-rat-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<configuration>
							<rulesets>
								<ruleset>${project.basedir}/cleancode/rulesets/pmd-rules.xml
								</ruleset>
							</rulesets>
							<sourceEncoding>utf-8</sourceEncoding>
							<minimumTokens>100</minimumTokens>
							<targetJdk>${maven.compiler.target}</targetJdk>
							<excludeRoots>
								<excludeRoot>target/generated-sources/</excludeRoot>
							</excludeRoots>
							<includeTests>true</includeTests>
							<analysisCache>true</analysisCache>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>eu.codearte.catch-exception</groupId>
				<artifactId>catch-throwable</artifactId>
				<version>${catch-exception.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>eu.codearte.catch-exception</groupId>
				<artifactId>catch-exception</artifactId>
				<version>${catch-exception.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-annotations-version}</version>
			</dependency>
			<dependency>
				<groupId>com.flipkart.zjsonpatch</groupId>
				<artifactId>zjsonpatch</artifactId>
				<version>${zjsonpatch.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.errorprone</groupId>
				<artifactId>error_prone_annotations</artifactId>
				<version>${error_prone_annotations.version}</version>
			</dependency>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-s3</artifactId>
				<version>${aws-java-sdk-s3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-codec-http</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-codec-http2</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-api.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${jodatime-version}</version>
			</dependency>
			<dependency>
				<groupId>com.graphql-java</groupId>
				<artifactId>graphql-java</artifactId>
				<version>${graphql-java.version}</version>
			</dependency>
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>${jna.version}</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>
			<dependency>
				<groupId>-org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>${objenesis.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.javafaker</groupId>
				<artifactId>javafaker</artifactId>
				<version>${javafaker.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-inline</artifactId>
				<version>${mockito-inline.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-stdlib-jdk8</artifactId>
				<version>${kotlin-stdlib-jdk8.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jayway.jsonpath</groupId>
				<artifactId>json-path</artifactId>
				<version>${json-path.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-reflect</artifactId>
				<version>${kotlin-reflect.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-stdlib-jdk7</artifactId>
				<version>${kotlin-stdlib-jdk7.version}</version>
			</dependency>
			<dependency>
				<groupId>io.projectreactor</groupId>
				<artifactId>reactor-core</artifactId>
				<version>${reactor-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-stdlib</artifactId>
				<version>${kotlin-stdlib.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit-jupiter-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-stdlib-common</artifactId>
				<version>${kotlin-stdlib-common.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-commons</artifactId>
				<version>${junit-platform-commons.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>${velocity.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
			</dependency>
			<dependency>
				<groupId>org.reflections</groupId>
				<artifactId>reflections</artifactId>
				<version>${reflections.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${commons-digester.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jdt.core.compiler</groupId>
				<artifactId>ecj</artifactId>
				<version>${ecj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mvel</groupId>
				<artifactId>mvel2</artifactId>
				<version>${mvel2.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.xml.bind</groupId>
				<artifactId>jakarta.xml.bind-api</artifactId>
				<version>${jakarta.xml.bind-api.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>${javax.el-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>itextpdf</artifactId>
				<version>${itextpdf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-configuration-processor</artifactId>
				<version>${spring-boot-configuration-processor.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.npathai</groupId>
				<artifactId>hamcrest-optional</artifactId>
				<version>${hamcrest-optional.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${jsr305.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson-annotations.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson-core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.activation</groupId>
				<artifactId>jakarta.activation</artifactId>
				<version>${jakarta.activation.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-runner</artifactId>
				<version>${junit-platform-runner.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-autoconfigure</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jcl</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${awaitility.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox-swagger2.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.classgraph</groupId>
				<artifactId>classgraph</artifactId>
				<version>${classgraph.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>eu.codearte.catch-exception</groupId>
			<artifactId>catch-throwable</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.codearte.catch-exception</groupId>
			<artifactId>catch-exception</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.netflix.graphql.dgs</groupId>
			<artifactId>graphql-dgs-spring-boot-starter</artifactId>
			<version>${graphql-dgs-spring-boot-starter.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-mongodb</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jsr305</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-sync</artifactId>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers-junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<version>${testcontainers-mongodb.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo-java-driver.version}</version>
		</dependency>
		<dependency>
			<artifactId>spring-boot-starter-data-rest</artifactId>
			<groupId>org.springframework.boot</groupId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>junit-vintage-engine</artifactId>
					<groupId>org.junit.vintage</groupId>
				</exclusion>
			</exclusions>
			<groupId>org.springframework.boot</groupId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
		</dependency>

		<!-- dependencies are needed for the client being generated -->

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>

		<!-- HTTP client: jersey-client -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.hk2.external</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.annotation</groupId>
					<artifactId>javax.annotation-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- JSON processing: jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-base</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>com.brsanthu</groupId>
			<artifactId>migbase64</artifactId>
			<version>${migbase64.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>${jackson-databind-nullable-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jeasy</groupId>
			<artifactId>easy-random-core</artifactId>
			<version>${easy-random-core.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.objenesis</groupId>
					<artifactId>objenesis</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.javafaker</groupId>
			<artifactId>javafaker</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>localstack</artifactId>
			<version>${testcontainers-localstack.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.connectors</groupId>
			<artifactId>jersey-apache-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<version>${wiremock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>com.pivovarit</groupId>
			<artifactId>throwing-function</artifactId>
			<version>${throwing-function.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.github.npathai</groupId>
			<artifactId>hamcrest-optional</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
	</dependencies>
</project>
